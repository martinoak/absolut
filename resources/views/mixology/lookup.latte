{layout '../layout.latte'}

{block content}
    <div class="container mx-auto" id="app">
        {include 'nav.latte'}

        <button v-on:click="showIngredients = !showIngredients" class="text-black font-bold m-2">
            Ingredience
        </button>
        <div class="flex flex-wrap p-1" v-if="showIngredients">
            <div class="flex items-center m-0.5" v-for="ingredient in ingredients">
                <input type="checkbox" v-bind:id="ingredient" v-bind:value="ingredient" v-on:change="handleChange($event)" class="peer hidden" v-bind:checked="checkedIngredients.includes(ingredient)">
                <label v-bind:for="ingredient" class="select-none rounded-lg border border-black py-1 px-2 font-bold text-black transition-colors duration-200 ease-in-out peer-checked:bg-[#0048ba] peer-checked:text-white" v-bind:class="{'peer-checked': ingredient.includes(ingredient)}">{{ ingredient }}</label>
            </div>
        </div>

        <a v-bind:href="'/mixology/' + cocktail.slug" class="m-2 max-h-32 flex items-center border border-gray-200 rounded-lg shadow" v-for="cocktail in cocktails">
            <img class="object-cover w-1/2 rounded-s-lg h-32 md:w-48" v-bind:src="cocktail.image" alt="">
            <div class="flex flex-col justify-between p-4 w-1/2">
                <h1 class="mb-2 text-2xl font-bold">{{ cocktail.name }}</h1>
                <div class="flex items-center justify-between">
                    <h2 class="text-[#0048ba]">{{ cocktail.rating }}</h2>

                </div>
            </div>
        </a>

        <div class="fixed end-6 bottom-6 group">
            <a href="#recipesList" class="flex items-center justify-center text-white bg-blue-700 rounded-full w-14 h-14">
                <i class="fa-solid fa-martini-glass-citrus fa-lg"></i>
            </a>
        </div>
    </div>
{/block}

{block bottomscripts}
<script>
    let vue = new Vue({
    el: '#app',
    data: {
        ingredients: [],
        checkedIngredients: {\App\Models\Ingredient::all()->pluck('name')->toArray()},
        cocktails: [],
        showIngredients: true
    },
    methods: {
        handleChange: function (event) {
            if (event.target.checked) {
                this.checkedIngredients.push(event.target.value);
            } else {
                this.checkedIngredients = this.checkedIngredients.filter(item => item !== event.target.value);
            }
        },
        fetchCocktails: function() {
            fetch('/api/possible-cocktails', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    ingredients: this.checkedIngredients
                }),
            })
            .then(response => response.json())
            .then(data => {
                this.cocktails = data;
                console.log(Object.keys(data).length);
            })
        }
    },
    watch: {
        checkedIngredients: function () {
            this.fetchCocktails();
        }
    },
    created: function () {
        let data = {$ingredients};
        this.ingredients = Object.keys(data).map(key => data[key]);
        this.fetchCocktails();
    }
});
</script>
{/block}
